# Server Configuration
server.port=7676
spring.application.name=cqrs-template

# Spring Boot Actuator
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

# Axon Framework Configuration
axon.axonserver.enabled=false
# Axon's auto-configuration will use a JpaTokenStore by default for Tracking Event Processors
# when spring-boot-starter-data-jpa is present and Axon's TokenEntry entity is available.

# PostgreSQL Configuration (Write Model - Event Store)
spring.datasource.url=jdbc:postgresql://localhost:5432/dev
spring.datasource.username=dev
spring.datasource.password=dev
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Elasticsearch Configuration (Read Model)
spring.elasticsearch.uris=http://192.168.1.164:9200
# spring.elasticsearch.username=elastic
# spring.elasticsearch.password=changeme

# Kafka Configuration
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=alert-consumer-group
spring.kafka.consumer.auto-offset-reset=earliest

# Configure JSON Deserialization for Kafka Consumer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.spring.json.value.default.type=template.cqrs.infrastructure.kafka.dto.IncomingAlertMessageDto

# Kafka Topics
app.kafka.topic.alerts.input=alerts-input-topic
app.kafka.topic.alerts.events=alerts-events-topic

# Axon Kafka Extension Configuration
axon.kafka.default-topic=${app.kafka.topic.alerts.events}
# Explicitly set Axon Kafka producer bootstrap servers.
# This will pick up the value of spring.kafka.bootstrap-servers,
# which is overridden by the environment variable in docker-compose.yml.
axon.kafka.producer.bootstrap-servers=${spring.kafka.bootstrap-servers}
axon.kafka.producer.transaction-id-prefix=axon-transaction-
axon.kafka.publisher.confirmation-mode=WAIT_FOR_ACK

# Read Model Elasticsearch Projection Batching Configuration
app.projection.batch.size=100
app.projection.batch.timeout-ms=120000

# OpenAPI / Swagger Configuration
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=alpha
springdoc.swagger-ui.tagsSorter=alpha
springdoc.packagesToScan=template.cqrs.web.controller

# Logging
logging.level.template.cqrs=DEBUG